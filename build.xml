<!-- This is a Ant file for Google AppEngine project -->

<project name="firing-range" default="war">

  <!-- Your working directories, change the value of appengine.sdk accordingly. -->
  <property name="appengine.sdk" location="../.."/>

  <!-- Check that the SDK value is set and seems sane, so we can give a nicer
       error if not.  -->
  <fail message="Please define the appengine.sdk property to point to your SDK directory">
    <condition>
      <not> <and>
          <isset property="appengine.sdk"/>
          <available file="${appengine.sdk}/config/user/ant-macros.xml"/>
      </and> </not>
    </condition>
  </fail>

  <!-- Pick up the Ant macros and taskdefs for App Engine -->
  <import file="${appengine.sdk}/config/user/ant-macros.xml"/>


  <!-- Remote debug port for dev_appserver -->
  <property name="debug.port" value="5005"/>

  <!-- HTTP port for dev_appserver -->
  <property name="http.port" value="8080"/>

  <!-- address for dev_appserver -->
  <property name="http.ip" value="localhost"/>

  <!-- Name of log file to write logs to -->
  <property name="log.file" value="app.log"/>

  <!-- Number of days worth of logs to retrieve -->
  <property name="log.days" value="2"/>

  <property name="war.dir" location="war"/>

  <target name="war" depends="enhance" 
          description="Assemble the application directory">
    <enhance_war war="${war.dir}"/>
  </target>

  <target name="enhance" depends="compile"
          description="Enhance the classes after compilation">
    <enhance_war war="${war.dir}"/>
  </target>

  <target name="getjars">
 		<mkdir dir="${war.dir}/WEB-INF/lib" />
		<get src="http://central.maven.org/maven2/com/google/guava/guava/18.0/guava-18.0.jar" dest="${war.dir}/WEB-INF/lib"/>
		<get src="http://central.maven.org/maven2/org/jsoup/jsoup/1.8.1/jsoup-1.8.1.jar" dest="${war.dir}/WEB-INF/lib"/>
		<get src="http://central.maven.org/maven2/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar" dest="${war.dir}/WEB-INF/lib"/>
		<get src="http://central.maven.org/maven2/junit/junit/4.12/junit-4.12.jar" dest="${war.dir}/WEB-INF/lib" />
		<get src="http://central.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar" dest="${war.dir}/WEB-INF/lib"/>
	</target>

  <target name="compile" depends="clean, getjars"
          description="Compile the application servlet code">
    <mkdir dir="${war.dir}/WEB-INF/classes"/>
    <javac srcdir="src" destdir="${war.dir}/WEB-INF/classes">
      <classpath>
        <fileset dir="${war.dir}/WEB-INF/lib">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/shared">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </javac>
    <!-- copy data folders -->
    <copy todir="${war.dir}/WEB-INF/classes/com/google/testing/security/firingrange/tests/">
      <fileset dir="src/tests">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
    <!-- copy config files -->
    <copy
        todir="${war.dir}/WEB-INF/"
        flatten="true">
      <fileset dir="./WEB-INF">
        <include name="**/*.*" />
      </fileset>
    </copy>
    <!-- copy html pages -->
    <copy todir="${war.dir}/pages/">
      <fileset dir="src/pages">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="clean"
          description="Force a clean slate to rebuild">
    <delete dir="${war.dir}"/>
  </target>

  <target name="runserver" depends="war"
          description="Run the dev_appserver">
    <dev_appserver war="${war.dir}" address="${http.ip}" port="${http.port}"/>
  </target>

  <target name="dev_appserver" depends="runserver"/>

  <target name="debug" depends="war" 
          description="Launches dev_appserver with remote debugging enabled">
    <echo message="Launching dev_appserver on Web port ${http.port}, Java remote debug port ${debug.port}"/>
    <dev_appserver war="${war.dir}" address="${http.ip}" port="${http.port}">
      <options>
        <arg value="--jvm_flag=-Xdebug"/>
        <arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${debug.port}"/>
      </options>
    </dev_appserver>
  </target>

  <target name="update" depends="war" 
          description="Uploads the application, including indexes">
    <appcfg action="update" war="${war.dir}"/>
  </target>

  <target name="update_indexes" depends="war" 
          description="Uploads only the application's indexes">
    <appcfg action="update_indexes" war="${war.dir}"/>
  </target>

  <target name="rollback" depends="war" 
          description="Rolls back any in-progress application update">
    <appcfg action="rollback" war="${war.dir}"/>
  </target>

  <target name="request_logs" 
          description="Downloads the application's logs">
    <appcfg action="request_logs" war="${war.dir}">
      <options>
        <arg value="--num_days=${log.days}"/>
      </options>
      <args>
        <arg value="${log.file}"/>
      </args>
    </appcfg>
  </target>

</project>
